{"version":3,"sources":["components/header.jsx","components/cardArea.js","components/cardRow.js","components/calculator.js","App.js","serviceWorker.js","index.js","logo.png"],"names":["HeaderLogo","props","state","Fragment","class","style","borderBottom","backgroundColor","marginBottom","href","src","this","logo","width","height","alt","loading","Component","useStyles","makeStyles","theme","root","maxWidth","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","PlanCard","classes","React","useState","expanded","Card","className","marginRight","CardHeader","title","subheader","CardContent","Typography","variant","color","component","CardActions","disableSpacing","IconButton","aria-label","clsx","aria-expanded","Button","CardRow","planos","getPlanos","axios","get","then","e","setState","data","catch","error","console","log","map","plan","name","Calculator","origemChange","costos","minutes","destinos","destinoSelected","calculate","price","origems","origemSelected","orcamentos","getCostos","getOrigems","handleChangeOrigemDestino","event","target","value","params","origem","handleChangeDestino","handleChangeMinutes","calculatePrices","post","destino","minutos","parseInt","TextField","id","select","label","onChange","helperText","option","MenuItem","key","margin","onClick","o","nome","valor","toFixed","App","Logo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.350c20b2.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\n\n\n\nclass HeaderLogo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return (\n            \n            <React.Fragment>\n            \n            \n                <nav class=\"navbar navbar-light bg-light \" style={{ borderBottom: '3px solid #33baeb', backgroundColor:'white', marginBottom:'4%'}}>\n                    <a class=\"navbar-brand\" href=\"#\">\n                        <img src= {this.props.logo} width=\"40\" height=\"40\" alt=\"\" loading=\"lazy\" /> \n                        Telzir\n                    </a>\n                </nav>\n                \n            </React.Fragment>\n            \n\n            \n         );\n    }\n}\n \nexport default HeaderLogo;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Button } from '@material-ui/core';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function PlanCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  \n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root} style={{marginRight:'30px'}}>\n      <CardHeader\n        \n        title={props.title}\n        subheader={props.subheader}\n      />\n      \n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Dui faucibus in ornare quam viverra orci. Tempus imperdiet nulla malesuada pellentesque elit eget.\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          \n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n            <Button variant='contained' style={{backgroundColor:'#3dc3f1'}}> Saiba mais</Button>\n          \n        </IconButton>\n      </CardActions>\n     \n    </Card>\n  );\n}\n\n","import React, { Component } from 'react';\nimport CardArea from './cardArea';\nimport axios from 'axios';\nclass CardRow extends Component {\n    state = {\n        planos:[]\n    }\n    getPlanos = () => {\n        axios\n        .get(\"http://localhost:5000/api/planos\")\n        .then(e => this.setState({planos:e.data}))\n        .catch(error=>console.log(error))\n    };\n    componentDidMount(){\n\n        this.getPlanos()\n    }\n    \n    render() {\n        \n        return (\n            <React.Fragment>\n                \n                { this.state.planos.map(plan => <CardArea title={plan.name}></CardArea>)}\n            </React.Fragment>\n            \n\n        );\n    }\n}\n \nexport default CardRow;","import { FormControl,InputLabel,Input,FormHelperText } from '@material-ui/core';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport axios from 'axios'\nimport { Button,Card,CardContent} from '@material-ui/core';\nimport Select from 'react-select';\n\nclass Calculator  extends Component {\n    state = {\n        origemChange:'', \n        costos:[],\n        minutes:0.00,\n        destinos:[],\n        destinoSelected:'',\n        planos:[],\n        calculate:false,\n        price:0,\n        origems:[],\n        origemSelected: '',\n        orcamentos: []\n\n    }\n    \n    getCostos=()=>{\n        axios\n        .get(\"http://localhost:5000/api/costos\")\n        .then(e => {\n\n            this.setState({costos:e.data})})\n        .catch(error=>console.log(error))\n    };\n    getPlanos=()=>{\n        axios\n        .get(\"http://localhost:5000/api/planos\")\n        .then(e => {\n\n            this.setState({planos:e.data})})\n        .catch(error=>console.log(error))\n    };\n    getOrigems=()=>{\n        axios\n        .get(\"http://localhost:5000/api/origems\")\n        .then(e => {\n\n            this.setState({origems:e.data})})\n        .catch(error=>console.log(error))\n    };\n\n    \n    componentDidMount(){\n        this.getOrigems()\n        // this.getPlanos()\n        \n    }\n    handleChangeOrigemDestino = (event) => {\n        this.setState({origemSelected: event.target.value})\n        axios\n        .get(\"http://localhost:5000/api/costos/\",{params:{origem:event.target.value}})\n        .then(e => {\n\n            this.setState({destinos:e.data})})\n        .catch(error=>console.log(error))   \n        \n\n        \n    };\n    handleChangeDestino = (event) => {\n        this.setState({destinoSelected:event.target.value});\n    };\n    handleChangeMinutes = (event) => {\n        this.setState({minutes:event.target.value});\n    };\n\n    calculatePrices=()=>{\n        axios\n        .post(\"http://localhost:5000/api/orcamentos/\",{\n            origem: this.state.origemSelected,\n            destino: this.state.destinoSelected,\n            minutos: parseInt(this.state.minutes)\n        })\n        .then(e => {\n\n            this.setState({orcamentos:e.data})})\n        .catch(error=>console.log(error))\n\n    }\n\n    render() {        \n       \n        return (\n            <React.Fragment>\n                <div className='row' style={{marginBottom:'50px'}}>\n                    \n                        \n\n                    <TextField\n                        id=\"standard-select-currency\"\n                        select\n                        label=\"Origem\"\n                        onChange={event=>this.handleChangeOrigemDestino(event)}\n                        helperText=\"Seleçione o codigo\"\n                        style={{marginRight:'50px'}}\n                        className='col'\n                    >\n                        {\n                        this.state.origems.map((option) => (\n                            <MenuItem key={option} value={option}>\n                            {option}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                    <TextField\n                        id=\"standard-select-currency\"\n                        select\n                        label=\"Destino\"\n                        onChange={event=>this.handleChangeDestino(event)}\n                        helperText=\"Seleçione o codigo\"\n                        style={{marginRight:'50px'}}\n                        className='col'\n                    >\n                        {\n                        this.state.destinos.map((option) => (\n                            <MenuItem key={option.destino} value={option.destino}>\n                            {option.destino}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                    <TextField\n                        id=\"standard-select-currency\"\n                        \n                        label=\"Minutos\"\n                        value={this.state.minutes}\n                        onChange={event=>this.handleChangeMinutes(event)}\n                        helperText=\"Quantos miutos deseja falar?\"\n                        style={{marginRight:'50px'}}\n                        className='col'\n                    />\n                        \n                    \n                </div>\n                    <div className=\"row\" style={{marginBottom:'10px'}}>\n                        <Button  variant='contained' style={{backgroundColor:'#ff6a67',margin:'auto'}} onClick={this.calculatePrices}> Me mostra</Button>\n                        \n                        \n                        \n                        \n                    \n                    \n                    </div>\n                \n                \n                <div className=\"row\" style={{marginBottom:'10px'}}>\n                    {this.state.orcamentos.map((o) => (\n                        \n                            <Card style={{backgroundColor:'',marginRight:'20px'}} className='col'>\n                                <CardContent >\n                                    {o.nome}\n                                    \n                                </CardContent>\n                                <CardContent>\n                                    \n                                    ${o.valor.toFixed(2)}\n                                </CardContent>\n                            </Card>\n                    \n                        \n                    ))}\n                </div>\n            </React.Fragment>\n          );\n    }\n}\n \nexport default Calculator ;","import React from 'react';\nimport Logo from \"./logo.png\";\nimport './App.css';\nimport HeaderLogo from './components/header';\nimport CardRow from './components/cardRow';\nimport Calculator from './components/calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderLogo logo={Logo}></HeaderLogo>\n      <div class=\"container\">\n        <div class=\"row\" style={{marginBottom:'50px'}}>\n         A Telzir está com novas ofertas para voce:\n        </div>\n        <div class=\"row\"style={{marginBottom:'50px'}}>\n          <CardRow></CardRow>\n          \n          \n        </div>\n        <div class=\"row\" style={{marginBottom:'10px'}}>\n          Ainda não se convenceu? Da uma olhada nos preços que a gente tem....\n          \n          \n        </div>\n        \n          \n        <Calculator></Calculator>\n          \n        \n        \n      </div>  \n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.ba33310f.png\";"],"sourceRoot":""}